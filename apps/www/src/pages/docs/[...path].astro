---
import { join } from 'path';
import type { MarkdownInstance } from 'astro';
const posts = import.meta.glob('./**/*.md', { eager: true });
export async function getStaticPaths() {
  const files = import.meta.glob('./**/*.md', { eager: true });
  const paths = Object.keys(files).map((file) => {
    const path = join(file.replaceAll(/\d\./g, '').replace(/\.md$/, ''));
    return {
      params: {
        path,
      },
    };
  });
  return paths;
}

const { path } = Astro.params;
const key = Object.keys(posts).find(
  (key) =>
    join(key.toLowerCase().replaceAll(/\d\./g, '').replace(/\.md$/, '')) ===
    path.toLowerCase(),
)!;
const { Content } = posts[key] as MarkdownInstance<{
  title: string;
  author: string;
  date: string;
  minutesRead: string;
  subtitle: string;
}>;
---

<Content />
