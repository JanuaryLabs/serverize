name: Deploy API

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}

on:
  push:
    branches: [main]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  client-project-deps-image:
    runs-on: ubuntu-latest
    if: false
    steps:
      - uses: actions/checkout@v3
      - uses: actions/github-script@v7
        with:
          script: |
            const { default: script } = await import('${{ github.workspace }}/tools/client-project-deps-image/collect-deps.js')
            script()

      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Cat package.json
        run: cat tools/client-project-deps-image/package.json

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          file: tools/client-project-deps-image/dockerfile
          context: ./tools/client-project-deps-image
          push: true
          tags: ezzabuzaid/january-client-build:latest

  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Cache Or Restore Node Modules
        id: cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}

      # - name: NX CLoud
      #   run: npx nx-cloud start-ci-run --distribute-on="5 linux-medium-js"

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm install --no-audit --no-fund

      - uses: nrwl/nx-set-shas@v4

      - name: Build Prod
        run: ./node_modules/.bin/nx run-many --projects auth,app-serverize --target build --prod

      # - run: npx nx affected -t build --prod

      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push - API
        if: false
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ezzabuzaid/tarrez:latest
          platforms: linux/amd64,linux/arm64
      - name: Build and push - Serverize
        uses: docker/build-push-action@v5
        with:
          file: ./dockerfile.serverize
          context: .
          push: true
          tags: ezzabuzaid/serverize-manager:latest
          platforms: linux/amd64,linux/arm64

      - name: Install Vercel CLI
        run: npm install --global vercel@latest --no-audit --no-fund
        if: false

      - name: Pull Vercel Environment Information For Playground
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
        env:
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        if: false

      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
        env:
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        if: false
      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
        env:
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        if: false

      # - name: Remove package-lock.json from dist
      #   continue-on-error: true
      #   run: rm -v dist/apps/**/package-lock.json
      #   if: false

      - name: Deploy to Firebase
        if: false
        uses: w9jds/firebase-action@master
        with:
          args: deploy --only functions --force --debug
        env:
          GCP_SA_KEY: ${{ secrets.FIREBASE_FUNCTIONS_SERVICE_ACCOUNT_KEY }}
          PROJECT_ID: 'january-9f554'

      - uses: sarisia/actions-status-discord@v1
        if: always()
        with:
          webhook: ${{ secrets.DISCORD_STATUS_WEBHOOK }}
          nodetail: true
          title: ${{github.repository}}
          url: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}

  update-servers:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Pull Serverize Docker
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_SERVERIZE_HOST }}
          username: ${{ secrets.SSH_SERVERIZE_USERNAME }}
          password: ${{ secrets.SSH_SERVERIZE_PASSWORD }}
          script: docker compose -f compose/compose.yml up -d --build --pull=always --remove-orphans

  update-docs-assistant:
    runs-on: ubuntu-latest
    needs: deploy
    if: false
    steps:
      - uses: actions/checkout@v3

      - name: Cache Or Restore Node Modules
        id: cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm install --legacy-peer-deps --no-audit --no-fund

      - uses: actions/github-script@v7
        with:
          script: |
            const script = await require('./tools/update-openai-vector/update-openai-vector.js')
            script()
