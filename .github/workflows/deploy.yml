name: Deploy API

on:
  push:
    branches: [main]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 22

      - name: Cache Or Restore Node Modules
        id: cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm install --no-audit --no-fund

      - uses: nrwl/nx-set-shas@v4

      - name: Build Prod
        run: ./node_modules/.bin/nx run-many --projects api,manager,www --target build --prod

      - name: Deploy WWW
        uses: nwtgck/actions-netlify@v3.0
        with:
          publish-dir: './dist/apps/www'
          production-branch: main
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message: 'Deploy from GitHub Actions'
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}

      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push - API
        uses: docker/build-push-action@v5
        with:
          file: ./docker/dockerfile.api
          context: .
          push: true
          tags: ezzabuzaid/serverize-api:latest
          platforms: linux/amd64,linux/arm64
      - name: Build and push - MANAGER
        uses: docker/build-push-action@v5
        with:
          file: ./docker/dockerfile.manager
          context: .
          push: true
          tags: ezzabuzaid/serverize-manager:latest
          platforms: linux/amd64,linux/arm64

      # - name: Remove package-lock.json from dist
      #   continue-on-error: true
      #   run: rm -v dist/apps/**/package-lock.json
      #   if: false

      # - name: Deploy to Firebase
      #   if: false
      #   uses: w9jds/firebase-action@master
      #   with:
      #     args: deploy --only functions --force --debug
      #   env:
      #     GCP_SA_KEY: ${{ secrets.FIREBASE_FUNCTIONS_SERVICE_ACCOUNT_KEY }}
      #     PROJECT_ID: 'january-9f554'

      - uses: sarisia/actions-status-discord@v1
        if: always()
        with:
          webhook: ${{ secrets.DISCORD_STATUS_WEBHOOK }}
          nodetail: true
          title: ${{github.repository}}
          url: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}

  update-servers:
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: Pull Serverize Docker
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_SERVERIZE_HOST }}
          username: ${{ secrets.SSH_SERVERIZE_USERNAME }}
          password: ${{ secrets.SSH_SERVERIZE_PASSWORD }}
          script: docker compose -f compose/compose.yml up -d --build --pull=always --remove-orphans
