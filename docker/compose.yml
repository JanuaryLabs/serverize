services:
  traefik:
    image: traefik:3.3.2
    networks:
      - traefik-network
    ports:
      - '443:443' # HTTPS
      - '80:80' # HTTP
      - '4443:4443' # TCP
      - '8080:8080' # Dashboard
    volumes:
      - './letsencrypt:/letsencrypt'
      - 'logs:/var/log'
      - './traefik.yml:/etc/traefik/traefik.yml:ro'
    env_file:
      - .env # Ensure your Hetzner API token is in this file
    depends_on:
      api:
        condition: service_healthy
      manager:
        condition: service_healthy
    logging:
      driver: 'json-file'
      options:
        max-size: '500m'
        max-file: '5'

  sablier:
    image: sablierapp/sablier:1.8.1
    command:
      - start
      - '--provider.name=docker'
      - '--storage.file=/sablier/session.txt'
    ports:
      - '10000:10000'
    networks:
      - traefik-network
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock'
      - 'sablier:/sablier'
    logging:
      driver: 'json-file'
      options:
        max-size: '50m'
        max-file: '5'

  whoami:
    image: traefik/whoami
    networks:
      - traefik-network
    labels:
      - 'sablier.enable=true'
      - 'sablier.group=whoami'
    logging:
      driver: 'json-file'
      options:
        max-size: '10m'
        max-file: '1'

  manager:
    image: docker.io/ezzabuzaid/serverize-manager:latest
    platform: linux/amd64
    restart: unless-stopped
    networks:
      - traefik-network
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - serverize-uploads:/serverize/uploads:rw
    environment:
      - NODE_ENV=production
      - PORT=3000
      - GITHUB_CLIENT_ID=Ov23liTdbDl03bHIuT4N
      - GITHUB_CLIENT_SECRET=6e79fe6d569964426f4c81d532686be6f17c28ae
      - API_URL=http://api:3000
      - UPLOAD_DIR=/serverize/uploads
    healthcheck:
      test: wget --no-verbose --spider --tries=1 http://localhost:3000/health || exit 1
    logging:
      driver: 'json-file'
      options:
        max-size: '50m'
        max-file: '5'

  api:
    image: docker.io/ezzabuzaid/serverize-api:latest
    platform: linux/amd64
    restart: unless-stopped
    networks:
      - traefik-network
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - serverize-uploads:/serverize/uploads:rw
      - logs:/logs
    env_file:
      - .env.api
    environment:
      - NODE_ENV=production
      - PORT=3000
      - ORM_SYNCHRONIZE=true
      - ORM_MIGRATIONS_RUN=true
      - MANAGEMENT_API_URL=http://manager:3000
    healthcheck:
      test: wget --no-verbose --spider --tries=1 http://localhost:3000/health || exit 1
    logging:
      driver: 'json-file'
      options:
        max-size: '50m'
        max-file: '5'

  tusd:
    image: tusproject/tusd:latest
    command: -upload-dir=/data -disable-download
    user: '0:0' # Run as root
    platform: linux/amd64
    restart: unless-stopped
    networks:
      - traefik-network
    volumes:
      - serverize-uploads:/data:rw
    logging:
      driver: 'json-file'
      options:
        max-size: '50m'
        max-file: '5'

volumes:
  serverize-uploads:
    driver: local
    driver_opts:
      type: none
      device: /mnt/images
      o: bind
  sablier:
  logs:

networks:
  traefik-network:
    external: false
