services:
  traefik:
    volumes:
      - ./traefik.local.yml:/etc/traefik/traefik.yml:ro
      - logs:/var/log
    env_file: !reset []

  api:
    image: node:lts-alpine
    working_dir: /app
    command: node --watch /app/api
    platform: linux/amd64
    restart: unless-stopped
    depends_on:
      - database
    ports:
      - '3000:3000'
    networks:
      - traefik-network
      - development
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - serverize-uploads:/data:rw
      - logs:/tmp/logs
      - /Users/ezzabuzaid/Desktop/january/serverize/dist/apps/api:/app/api:rw
      - /Users/ezzabuzaid/Desktop/january/serverize/apps/api/node_modules:/app/api/node_modules:rw
      - /Users/ezzabuzaid/Desktop/january/serverize/node_modules:/app/node_modules:rw
    env_file: !override
      - /Users/ezzabuzaid/Desktop/january/serverize/apps/api/.env
    environment:
      - NODE_ENV=development
      - PORT=3000
      - ORM_SYNCHRONIZE=true
      - ORM_MIGRATIONS_RUN=true
      - CONNECTION_STRING=postgresql://youruser:yourpassword@host.docker.internal:5432/yourdatabase
      - UPLOAD_DIR=/data
    healthcheck:
      test: wget --no-verbose --spider --tries=1 http://localhost:3000/health || exit 1

  tusd:
    command: -upload-dir=/data
    user: '0:0' # Run as root
    ports:
      - '8085:8080'

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - '9090:9090'
    networks:
      - traefik-network
  database:
    image: 'postgres:16'
    volumes:
      - 'postgres_data:/var/lib/postgresql/data'
    networks:
      - 'development'
    ports:
      - '5432:5432'
    environment:
      POSTGRES_PASSWORD: 'yourpassword'
      POSTGRES_USER: 'youruser'
      POSTGRES_DB: 'yourdatabase'

volumes:
  postgres_data:
  serverize-uploads:
    driver: local
    driver_opts: !reset null
# docker compose -f docker/compose.yml -f docker/compose.override.yml up --remove-orphans

networks:
  development:
    external: false
